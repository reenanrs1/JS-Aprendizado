Links Uteis - https://web.dio.me/lives/como-criar-e-publicar-seu-primeiro-servidor-com-nodejs-getting-started-7
https://web.dio.me/course/materiais-complementares-aprenda-a-programar-do-zero-com-javascript/learning/b25d443e-c193-4a3a-b5df-c662e36076a4?back=/track/formacao-javascript-developer

https://www.w3schools.com/css/css3_mediaqueries_ex.asp

Hard Skill
- Linguagens de Programação
- Arquiteturas de Sistemas
- Bancos de dados
- Stacks de Desenvolvimento
- Ferramentas

Soft Skills
- Trabalho em Equipe
- Pensamento Crítico
- Gerenciamento do Tempo
- Comunicação
- Liderança

---------------------------------------------------------------------------------
Boas Praticas :
utilizar === invés de == para não ocorrer problema do JS validar string com int/float
Booleano - Sempre inserir a variavel com is no começo 

---------------------------------------------------------------------------------

Entendendo Algoritimos e Fluxogramas.

Algoritimos >> Ordem Lógica para resolver o problema (NÃO PASSE POR CIMA DESSA ETAPA)
Fluxograma >> Representação Visual de uma sequencia de ações lógicas.

---------------------------------------------------------------------------------
Variaveis = let / const
let = ela é uma variavel, dentro do código você pode muda-la definindo outro valor para ela
const = não varia, ao definir o primeiro valor não pode-se altera-la no código

.toFixed(2) após a variavel, faz com que ela arrendode as casas decimais para 2 casas, evitando numeros quebrados

Caso deseje negar um booleano você pode inserir o "!"antes da variavel.

Para algo ser diferente, utiliza-se != // caso queira indicar um OU outro utiliza-se && e caso queira se um e outro utilizase ||

const aluno = {nome: 'Renan'} === Objeto literal, não precisa de classe

arrays === lista // const alunos = [' ', ' ', ' '] 

-------------------------------------------------------------------------------------

Sempre utilizar normalize para CSS para ficar igual em todos os tipos de navegadores:
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/8.0.1/normalize.min.css" integrity="sha512-NhSC1YmyruXifcj/KFRWoC561YpHpc5Jtzgvbuzx5VozKpWvQ+4nXhPdFgmx8xqexRcpAglTj9sIBWINXa8x5w==" crossorigin="anonymous" referrerpolicy="no-referrer" />

Quando for realizar uma tela responsiva, utilizar a técnica Mobile First, 

CSS - Quando for realizar, pode-se fazer diretamente no DevTools para facilitar a visualização e depois passar para o código.